{
  "address": "0xF10B88347Ad7548B8420Cf506e1d056C610541C0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PerpOwnable_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PerpOwnable_OwnershipAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PerpOwnable_TransferZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PerpOwnerTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPerpOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd61149c72eeddf74f4894cbd3461e98599741862c2bce157d968e95b008ff86d",
  "receipt": {
    "to": null,
    "from": "0x69C7c048e7C286B0a8Bcf7cD7620E71Ef7569421",
    "contractAddress": "0xF10B88347Ad7548B8420Cf506e1d056C610541C0",
    "transactionIndex": 19,
    "gasUsed": "573269",
    "logsBloom": "0x
    "blockHash": "0x95737138c0422c86afce54e1c1f41fad1fbda26aa21efff56de9bc29bef126d2",
    "transactionHash": "0xd61149c72eeddf74f4894cbd3461e98599741862c2bce157d968e95b008ff86d",
    "logs": [],
    "blockNumber": 11179363,
    "cumulativeGasUsed": "2650178",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "vUSD quote token",
    "vUSD"
  ],
  "numDeployments": 1,
  "solcInputHash": "e1cef607481b161ae69d7ea60025156b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PerpOwnable_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PerpOwnable_OwnershipAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PerpOwnable_TransferZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PerpOwnerTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"perp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPerpOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferPerpOwner(address)\":{\"params\":{\"recipient\":\"Account granted `perp` access control.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"PerpOwnable_NotOwner()\":[{\"notice\":\"Emitted when the sender is not perp\"}],\"PerpOwnable_OwnershipAlreadyClaimed()\":[{\"notice\":\"Emitted when the ownership of the contract has already been claimed\"}],\"PerpOwnable_TransferZeroAddress()\":[{\"notice\":\"Emitted when the proposed address is equal to the zero address\"}]},\"kind\":\"user\",\"methods\":{\"transferPerpOwner(address)\":{\"notice\":\"Transfer `perp` accountMeant to be used only once at deployment as Perpetual can't transfer ownership afterwards\"}},\"notice\":\"ERC20 token traded on the CryptoSwap pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/VQuote.sol\":\"VQuote\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/interfaces/IVQuote.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IVirtualToken} from \\\"../interfaces/IVirtualToken.sol\\\";\\n\\ninterface IVQuote is IVirtualToken {}\\n\",\"keccak256\":\"0xf3c21b1973b431c9e0fd63e60544be3e5a7e51bfb4d6f8b4dbac26f38dc3f17b\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IVirtualToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IVirtualToken is IERC20Metadata {\\n    /* ****************** */\\n    /*  State modifying   */\\n    /* ****************** */\\n\\n    function mint(uint256 amount) external;\\n\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x0dda9dc3d416b9aaeb6e93915b33c2b358b4ee5b9e477fa3b7ff9be8198e95ec\",\"license\":\"AGPL-3.0\"},\"contracts/tokens/BaseERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice Modern and gas efficient ERC20 implementation.\\n/// @author Modified from Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract BaseERC20 is IERC20, IERC20Metadata {\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public override name;\\n\\n    string public override symbol;\\n\\n    uint8 public constant override decimals = 18;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public override totalSupply;\\n\\n    mapping(address => uint256) public override balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) external virtual override returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) external virtual override returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x186bd1b0c23c76526b4335a13a23ccde6889b52535f5d5a150869587094d2f06\",\"license\":\"AGPL-3.0-only\"},\"contracts/tokens/VQuote.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IVQuote} from \\\"../interfaces/IVQuote.sol\\\";\\n\\n// contracts\\nimport {VirtualToken} from \\\"./VirtualToken.sol\\\";\\n\\n/// @notice ERC20 token traded on the CryptoSwap pool\\ncontract VQuote is IVQuote, VirtualToken {\\n    constructor(string memory _name, string memory _symbol) VirtualToken(_name, _symbol) {}\\n}\\n\",\"keccak256\":\"0x0531983048e8983c0d0d4abde8a3c5f1e12c4b07bf9338c275729c2a1cb0e197\",\"license\":\"AGPL-3.0\"},\"contracts/tokens/VirtualToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// contracts\\nimport {BaseERC20} from \\\"./BaseERC20.sol\\\";\\nimport {PerpOwnable} from \\\"../utils/PerpOwnable.sol\\\";\\n\\n// interfaces\\nimport {IVirtualToken} from \\\"../interfaces/IVirtualToken.sol\\\";\\n\\ncontract VirtualToken is IVirtualToken, BaseERC20, PerpOwnable {\\n    constructor(string memory _name, string memory _symbol) BaseERC20(_name, _symbol) {}\\n\\n    function mint(uint256 amount) external override onlyPerp {\\n        _mint(perp, amount);\\n    }\\n\\n    function burn(uint256 amount) external override onlyPerp {\\n        _burn(perp, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x26311ab9519cf14cc461522c855af74f6e7a632c642d2e27f07db5c0d731dcac\",\"license\":\"AGPL-3.0\"},\"contracts/utils/PerpOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n/// @notice Emitted when the sender is not perp\\nerror PerpOwnable_NotOwner();\\n\\n/// @notice Emitted when the proposed address is equal to the zero address\\nerror PerpOwnable_TransferZeroAddress();\\n\\n/// @notice Emitted when the ownership of the contract has already been claimed\\nerror PerpOwnable_OwnershipAlreadyClaimed();\\n\\n/// @notice Perp access control contract, simplied version of IncreOwnable\\ncontract PerpOwnable {\\n    address public perp;\\n\\n    event PerpOwnerTransferred(address indexed sender, address indexed recipient);\\n\\n    /// @notice Access control modifier that requires modified function to be called by the perp contract\\n    modifier onlyPerp() {\\n        if (msg.sender != perp) revert PerpOwnable_NotOwner();\\n        _;\\n    }\\n\\n    /// @notice Transfer `perp` account\\n    /// @notice Meant to be used only once at deployment as Perpetual can't transfer ownership afterwards\\n    /// @param recipient Account granted `perp` access control.\\n    function transferPerpOwner(address recipient) external {\\n        if (recipient == address(0)) revert PerpOwnable_TransferZeroAddress();\\n        if (perp != address(0)) revert PerpOwnable_OwnershipAlreadyClaimed();\\n\\n        perp = recipient;\\n        emit PerpOwnerTransferred(msg.sender, recipient);\\n    }\\n}\\n\",\"keccak256\":\"0x6e552e8c7572353b8c68dfa2cb40a603d37c6605b06af66c78ecc5c022cb71bb\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000af838038062000af88339810160408190526200003491620001cc565b8181818181600090805190602001906200005092919062000073565b5080516200006690600190602084019062000073565b5050505050505062000286565b828054620000819062000233565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b600082601f8301126200012a578081fd5b81516001600160401b038082111562000147576200014762000270565b604051601f8301601f19908116603f0116810190828211818310171562000172576200017262000270565b816040528381526020925086838588010111156200018e578485fd5b8491505b83821015620001b1578582018301518183018401529082019062000192565b83821115620001c257848385830101525b9695505050505050565b60008060408385031215620001df578182fd5b82516001600160401b0380821115620001f6578384fd5b620002048683870162000119565b935060208501519150808211156200021a578283fd5b50620002298582860162000119565b9150509250929050565b600181811c908216806200024857607f821691505b602082108114156200026a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61086280620002966000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d68146101a9578063a9059cbb146101bc578063bfa4c00c146101cf578063dd62ed3e146101fa57600080fd5b806342966c681461016e57806370a082311461018157806395d89b41146101a157600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c5780632e5997fe1461013f578063313ce56714610154575b600080fd5b6100dc610225565b6040516100e99190610739565b60405180910390f35b6101056101003660046106f8565b6102b3565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046106bd565b61031f565b61015261014d36600461066a565b6103ff565b005b61015c601281565b60405160ff90911681526020016100e9565b61015261017c366004610721565b61049c565b61011e61018f36600461066a565b60036020526000908152604090205481565b6100dc6104df565b6101526101b7366004610721565b6104ec565b6101056101ca3660046106f8565b61052c565b6005546101e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b61011e61020836600461068b565b600460209081526000928352604080842090915290825290205481565b60008054610232906107bb565b80601f016020809104026020016040519081016040528092919081815260200182805461025e906107bb565b80156102ab5780601f10610280576101008083540402835291602001916102ab565b820191906000526020600020905b81548152906001019060200180831161028e57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061030e9086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461037b5761035683826107a4565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103a39084906107a4565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061080d833981519152906103ec9087815260200190565b60405180910390a3506001949350505050565b6001600160a01b0381166104265760405163dbdaa89360e01b815260040160405180910390fd5b6005546001600160a01b03161561045057604051630bd944dd60e21b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b03831690811790915560405133907f7b9555f62c991958c9d478fd36e574a975bfb8814d5d8f82fb9363a03d3dc63590600090a350565b6005546001600160a01b031633146104c65760405162529fc560e41b815260040160405180910390fd5b6005546104dc906001600160a01b031682610592565b50565b60018054610232906107bb565b6005546001600160a01b031633146105165760405162529fc560e41b815260040160405180910390fd5b6005546104dc906001600160a01b0316826105fc565b3360009081526003602052604081208054839190839061054d9084906107a4565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061080d8339815191529061030e9086815260200190565b6001600160a01b038216600090815260036020526040812080548392906105ba9084906107a4565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061080d833981519152906020015b60405180910390a35050565b806002600082825461060e919061078c565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061080d83398151915291016105f0565b80356001600160a01b038116811461066557600080fd5b919050565b60006020828403121561067b578081fd5b6106848261064e565b9392505050565b6000806040838503121561069d578081fd5b6106a68361064e565b91506106b46020840161064e565b90509250929050565b6000806000606084860312156106d1578081fd5b6106da8461064e565b92506106e86020850161064e565b9150604084013590509250925092565b6000806040838503121561070a578182fd5b6107138361064e565b946020939093013593505050565b600060208284031215610732578081fd5b5035919050565b6000602080835283518082850152825b8181101561076557858101830151858201604001528201610749565b818111156107765783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561079f5761079f6107f6565b500190565b6000828210156107b6576107b66107f6565b500390565b600181811c908216806107cf57607f821691505b602082108114156107f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205e092a77032a2e4e4211d34cea7208c737b7fe50d85dc0d29121455e58fb1ad464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a0712d6811610066578063a0712d68146101a9578063a9059cbb146101bc578063bfa4c00c146101cf578063dd62ed3e146101fa57600080fd5b806342966c681461016e57806370a082311461018157806395d89b41146101a157600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c5780632e5997fe1461013f578063313ce56714610154575b600080fd5b6100dc610225565b6040516100e99190610739565b60405180910390f35b6101056101003660046106f8565b6102b3565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046106bd565b61031f565b61015261014d36600461066a565b6103ff565b005b61015c601281565b60405160ff90911681526020016100e9565b61015261017c366004610721565b61049c565b61011e61018f36600461066a565b60036020526000908152604090205481565b6100dc6104df565b6101526101b7366004610721565b6104ec565b6101056101ca3660046106f8565b61052c565b6005546101e2906001600160a01b031681565b6040516001600160a01b0390911681526020016100e9565b61011e61020836600461068b565b600460209081526000928352604080842090915290825290205481565b60008054610232906107bb565b80601f016020809104026020016040519081016040528092919081815260200182805461025e906107bb565b80156102ab5780601f10610280576101008083540402835291602001916102ab565b820191906000526020600020905b81548152906001019060200180831161028e57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061030e9086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461037b5761035683826107a4565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103a39084906107a4565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061080d833981519152906103ec9087815260200190565b60405180910390a3506001949350505050565b6001600160a01b0381166104265760405163dbdaa89360e01b815260040160405180910390fd5b6005546001600160a01b03161561045057604051630bd944dd60e21b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b03831690811790915560405133907f7b9555f62c991958c9d478fd36e574a975bfb8814d5d8f82fb9363a03d3dc63590600090a350565b6005546001600160a01b031633146104c65760405162529fc560e41b815260040160405180910390fd5b6005546104dc906001600160a01b031682610592565b50565b60018054610232906107bb565b6005546001600160a01b031633146105165760405162529fc560e41b815260040160405180910390fd5b6005546104dc906001600160a01b0316826105fc565b3360009081526003602052604081208054839190839061054d9084906107a4565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061080d8339815191529061030e9086815260200190565b6001600160a01b038216600090815260036020526040812080548392906105ba9084906107a4565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061080d833981519152906020015b60405180910390a35050565b806002600082825461060e919061078c565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061080d83398151915291016105f0565b80356001600160a01b038116811461066557600080fd5b919050565b60006020828403121561067b578081fd5b6106848261064e565b9392505050565b6000806040838503121561069d578081fd5b6106a68361064e565b91506106b46020840161064e565b90509250929050565b6000806000606084860312156106d1578081fd5b6106da8461064e565b92506106e86020850161064e565b9150604084013590509250925092565b6000806040838503121561070a578182fd5b6107138361064e565b946020939093013593505050565b600060208284031215610732578081fd5b5035919050565b6000602080835283518082850152825b8181101561076557858101830151858201604001528201610749565b818111156107765783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561079f5761079f6107f6565b500190565b6000828210156107b6576107b66107f6565b500390565b600181811c908216806107cf57607f821691505b602082108114156107f057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205e092a77032a2e4e4211d34cea7208c737b7fe50d85dc0d29121455e58fb1ad464736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferPerpOwner(address)": {
        "params": {
          "recipient": "Account granted `perp` access control."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "PerpOwnable_NotOwner()": [
        {
          "notice": "Emitted when the sender is not perp"
        }
      ],
      "PerpOwnable_OwnershipAlreadyClaimed()": [
        {
          "notice": "Emitted when the ownership of the contract has already been claimed"
        }
      ],
      "PerpOwnable_TransferZeroAddress()": [
        {
          "notice": "Emitted when the proposed address is equal to the zero address"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "transferPerpOwner(address)": {
        "notice": "Transfer `perp` accountMeant to be used only once at deployment as Perpetual can't transfer ownership afterwards"
      }
    },
    "notice": "ERC20 token traded on the CryptoSwap pool",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18432,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 18435,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 18442,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 18447,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 18454,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 19394,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "perp",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}