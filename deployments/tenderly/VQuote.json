{
  "address": "0x457901AC17450b6448F85ccbD362aF10910634B4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "IncreOwnable_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncreOwnable_NotPendingOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IncreOwnable_TransferZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "TransferOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "TransferOwnerClaim",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "direct",
          "type": "bool"
        }
      ],
      "name": "transferOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6860c7a76d7f7d02767c4982c5f02dfdf761e16fcbb5d1c9926a1d01b5966acd",
  "receipt": {
    "to": null,
    "from": "0x69C7c048e7C286B0a8Bcf7cD7620E71Ef7569421",
    "contractAddress": "0x457901AC17450b6448F85ccbD362aF10910634B4",
    "transactionIndex": 0,
    "gasUsed": "671849",
    "logsBloom": "0x
    "blockHash": "0x053aa767ee2c525c1a9e158c03b2a2b8173ed999fe7dcf3fc02a90e3b3478620",
    "transactionHash": "0x6860c7a76d7f7d02767c4982c5f02dfdf761e16fcbb5d1c9926a1d01b5966acd",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 14861827,
        "transactionHash": "0x6860c7a76d7f7d02767c4982c5f02dfdf761e16fcbb5d1c9926a1d01b5966acd",
        "address": "0x457901AC17450b6448F85ccbD362aF10910634B4",
        "topics": [
          "0x5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c5",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000069c7c048e7c286b0a8bcf7cd7620e71ef7569421"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x053aa767ee2c525c1a9e158c03b2a2b8173ed999fe7dcf3fc02a90e3b3478620"
      }
    ],
    "blockNumber": 14861827,
    "cumulativeGasUsed": "671849",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "vUSD quote token",
    "vUSD"
  ],
  "solcInputHash": "0e343dabaf86f1433359bcaf3343f5ad",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"IncreOwnable_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncreOwnable_NotPendingOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncreOwnable_TransferZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"TransferOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"TransferOwnerClaim\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"}],\"name\":\"transferOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"transferOwner(address,bool)\":{\"params\":{\"direct\":\"If 'true', ownership is directly transferred.\",\"recipient\":\"Account granted `owner` access control.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"IncreOwnable_NotOwner()\":[{\"notice\":\"Emitted when the sender is not the owner\"}],\"IncreOwnable_NotPendingOwner()\":[{\"notice\":\"Emitted when the sender is not the pending owner\"}],\"IncreOwnable_TransferZeroAddress()\":[{\"notice\":\"Emitted when the proposed owner is equal to the zero address\"}]},\"kind\":\"user\",\"methods\":{\"claimOwner()\":{\"notice\":\"`pendingOwner` can claim `owner` account.\"},\"transferOwner(address,bool)\":{\"notice\":\"Transfer `owner` account.\"}},\"notice\":\"ERC20 token traded on the CryptoSwap pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/VQuote.sol\":\"VQuote\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.0 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\"},\"contracts/interfaces/IVQuote.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IVirtualToken} from \\\"../interfaces/IVirtualToken.sol\\\";\\n\\ninterface IVQuote is IVirtualToken {}\\n\",\"keccak256\":\"0xf3c21b1973b431c9e0fd63e60544be3e5a7e51bfb4d6f8b4dbac26f38dc3f17b\",\"license\":\"AGPL-3.0\"},\"contracts/interfaces/IVirtualToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IVirtualToken is IERC20Metadata {\\n    /* ****************** */\\n    /*  State modifying   */\\n    /* ****************** */\\n\\n    function mint(uint256 amount) external;\\n\\n    function burn(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x0dda9dc3d416b9aaeb6e93915b33c2b358b4ee5b9e477fa3b7ff9be8198e95ec\",\"license\":\"AGPL-3.0\"},\"contracts/tokens/BaseERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n/// @notice Modern and gas efficient ERC20 implementation.\\n/// @author Modified from Solmate (https://github.com/Rari-Capital/solmate/blob/main/src/tokens/ERC20.sol)\\n/// @dev Do not manually set balances without updating totalSupply, as the sum of all user balances must not exceed it.\\nabstract contract BaseERC20 is IERC20, IERC20Metadata {\\n    /*///////////////////////////////////////////////////////////////\\n                             METADATA STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    string public override name;\\n\\n    string public override symbol;\\n\\n    uint8 public constant override decimals = 18;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 STORAGE\\n    //////////////////////////////////////////////////////////////*/\\n\\n    uint256 public override totalSupply;\\n\\n    mapping(address => uint256) public override balanceOf;\\n\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n\\n    /*///////////////////////////////////////////////////////////////\\n                               CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////*/\\n\\n    constructor(string memory _name, string memory _symbol) {\\n        name = _name;\\n        symbol = _symbol;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                              ERC20 LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function approve(address spender, uint256 amount) external virtual override returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n\\n        emit Approval(msg.sender, spender, amount);\\n\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 amount) external virtual override returns (bool) {\\n        balanceOf[msg.sender] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(msg.sender, to, amount);\\n\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        uint256 allowed = allowance[from][msg.sender]; // Saves gas for limited approvals.\\n\\n        if (allowed != type(uint256).max) allowance[from][msg.sender] = allowed - amount;\\n\\n        balanceOf[from] -= amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        return true;\\n    }\\n\\n    /*///////////////////////////////////////////////////////////////\\n                       INTERNAL MINT/BURN LOGIC\\n    //////////////////////////////////////////////////////////////*/\\n\\n    function _mint(address to, uint256 amount) internal virtual {\\n        totalSupply += amount;\\n\\n        // Cannot overflow because the sum of all user\\n        // balances can't exceed the max uint256 value.\\n        unchecked {\\n            balanceOf[to] += amount;\\n        }\\n\\n        emit Transfer(address(0), to, amount);\\n    }\\n\\n    function _burn(address from, uint256 amount) internal virtual {\\n        balanceOf[from] -= amount;\\n\\n        // Cannot underflow because a user's balance\\n        // will never be larger than the total supply.\\n        unchecked {\\n            totalSupply -= amount;\\n        }\\n\\n        emit Transfer(from, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0x186bd1b0c23c76526b4335a13a23ccde6889b52535f5d5a150869587094d2f06\",\"license\":\"AGPL-3.0-only\"},\"contracts/tokens/VQuote.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// interfaces\\nimport {IVQuote} from \\\"../interfaces/IVQuote.sol\\\";\\n\\n// contracts\\nimport {VirtualToken} from \\\"./VirtualToken.sol\\\";\\n\\n/// @notice ERC20 token traded on the CryptoSwap pool\\ncontract VQuote is IVQuote, VirtualToken {\\n    constructor(string memory _name, string memory _symbol) VirtualToken(_name, _symbol) {}\\n}\\n\",\"keccak256\":\"0x0531983048e8983c0d0d4abde8a3c5f1e12c4b07bf9338c275729c2a1cb0e197\",\"license\":\"AGPL-3.0\"},\"contracts/tokens/VirtualToken.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n// contracts\\nimport {BaseERC20} from \\\"./BaseERC20.sol\\\";\\nimport {IncreOwnable} from \\\"../utils/IncreOwnable.sol\\\";\\n\\n// interfaces\\nimport {IVirtualToken} from \\\"../interfaces/IVirtualToken.sol\\\";\\n\\n// toDO: Write optimized ERC20 implementation for trades\\ncontract VirtualToken is IVirtualToken, BaseERC20, IncreOwnable {\\n    constructor(string memory _name, string memory _symbol) BaseERC20(_name, _symbol) {}\\n\\n    function mint(uint256 amount) external override onlyOwner {\\n        _mint(owner, amount);\\n    }\\n\\n    function burn(uint256 amount) external override onlyOwner {\\n        _burn(owner, amount);\\n    }\\n}\\n\",\"keccak256\":\"0xb3d6de71a6fc87c563b0f5d00abeeda72bfbf8f7777921cc63d6c70270b71b24\",\"license\":\"AGPL-3.0\"},\"contracts/utils/IncreOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.4;\\n\\n/// @notice Emitted when the sender is not the owner\\nerror IncreOwnable_NotOwner();\\n\\n/// @notice Emitted when the sender is not the pending owner\\nerror IncreOwnable_NotPendingOwner();\\n\\n/// @notice Emitted when the proposed owner is equal to the zero address\\nerror IncreOwnable_TransferZeroAddress();\\n\\n/// @notice Increment access control contract.\\n/// @author Adapted from https://github.com/boringcrypto/BoringSolidity/blob/master/contracts/BoringOwnable.sol, License-Identifier: MIT.\\n/// @author Adapted from https://github.com/sushiswap/trident/blob/master/contracts/utils/TridentOwnable.sol, License-Identifier: GPL-3.0-or-later\\ncontract IncreOwnable {\\n    address public owner;\\n    address public pendingOwner;\\n\\n    event TransferOwner(address indexed sender, address indexed recipient);\\n    event TransferOwnerClaim(address indexed sender, address indexed recipient);\\n\\n    /// @notice Initialize and grant deployer account (`msg.sender`) `owner` access role.\\n    constructor() {\\n        owner = msg.sender;\\n        emit TransferOwner(address(0), msg.sender);\\n    }\\n\\n    /// @notice Access control modifier that requires modified function to be called by `owner` account.\\n    modifier onlyOwner() {\\n        if (msg.sender != owner) revert IncreOwnable_NotOwner();\\n        _;\\n    }\\n\\n    /// @notice `pendingOwner` can claim `owner` account.\\n    function claimOwner() external {\\n        if (msg.sender != pendingOwner) revert IncreOwnable_NotPendingOwner();\\n        emit TransferOwner(owner, msg.sender);\\n        owner = msg.sender;\\n        pendingOwner = address(0);\\n    }\\n\\n    /// @notice Transfer `owner` account.\\n    /// @param recipient Account granted `owner` access control.\\n    /// @param direct If 'true', ownership is directly transferred.\\n    function transferOwner(address recipient, bool direct) external onlyOwner {\\n        if (recipient == address(0)) revert IncreOwnable_TransferZeroAddress();\\n        if (direct) {\\n            owner = recipient;\\n            emit TransferOwner(msg.sender, recipient);\\n        } else {\\n            pendingOwner = recipient;\\n            emit TransferOwnerClaim(msg.sender, recipient);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd98c075ae1e6304b4a88e94854a4f7f93a795ade40e70252e44697d72abe2d0e\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000c8f38038062000c8f83398101604081905262000034916200020e565b81818181816000908051906020019062000050929190620000b5565b50805162000066906001906020840190620000b5565b5050600580546001600160a01b031916339081179091556040519091506000907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c5908290a350505050620002c8565b828054620000c39062000275565b90600052602060002090601f016020900481019282620000e7576000855562000132565b82601f106200010257805160ff191683800117855562000132565b8280016001018555821562000132579182015b828111156200013257825182559160200191906001019062000115565b506200014092915062000144565b5090565b5b8082111562000140576000815560010162000145565b600082601f8301126200016c578081fd5b81516001600160401b0380821115620001895762000189620002b2565b604051601f8301601f19908116603f01168101908282118183101715620001b457620001b4620002b2565b81604052838152602092508683858801011115620001d0578485fd5b8491505b83821015620001f35785820183015181830184015290820190620001d4565b838211156200020457848385830101525b9695505050505050565b6000806040838503121562000221578182fd5b82516001600160401b038082111562000238578384fd5b62000246868387016200015b565b935060208501519150808211156200025c578283fd5b506200026b858286016200015b565b9150509250929050565b600181811c908216806200028a57607f821691505b60208210811415620002ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6109b780620002d86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610202578063cf81afaa14610215578063dd62ed3e14610228578063e30c39781461025357600080fd5b806370a082311461019c5780638da5cb5b146101bc57806395d89b41146101e7578063a0712d68146101ef57600080fd5b806323b872dd116100d357806323b872dd14610152578063313ce567146101655780633bd1adec1461017f57806342966c681461018957600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610266565b60405161010f919061088e565b60405180910390f35b61012b61012636600461084d565b6102f4565b604051901515815260200161010f565b61014460025481565b60405190815260200161010f565b61012b6101603660046107d8565b610360565b61016d601281565b60405160ff909116815260200161010f565b610187610440565b005b610187610197366004610876565b6104c3565b6101446101aa366004610785565b60036020526000908152604090205481565b6005546101cf906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610102610507565b6101876101fd366004610876565b610514565b61012b61021036600461084d565b610555565b610187610223366004610813565b6105bb565b6101446102363660046107a6565b600460209081526000928352604080842090915290825290205481565b6006546101cf906001600160a01b031681565b6000805461027390610910565b80601f016020809104026020016040519081016040528092919081815260200182805461029f90610910565b80156102ec5780601f106102c1576101008083540402835291602001916102ec565b820191906000526020600020905b8154815290600101906020018083116102cf57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061034f9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103bc5761039783826108f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103e49084906108f9565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206109628339815191529061042d9087815260200190565b60405180910390a3506001949350505050565b6006546001600160a01b0316331461046b57604051636d0c59cb60e01b815260040160405180910390fd5b60055460405133916001600160a01b0316907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c590600090a3600580546001600160a01b03199081163317909155600680549091169055565b6005546001600160a01b031633146104ee57604051637d369bab60e11b815260040160405180910390fd5b600554610504906001600160a01b0316826106ad565b50565b6001805461027390610910565b6005546001600160a01b0316331461053f57604051637d369bab60e11b815260040160405180910390fd5b600554610504906001600160a01b031682610717565b336000908152600360205260408120805483919083906105769084906108f9565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206109628339815191529061034f9086815260200190565b6005546001600160a01b031633146105e657604051637d369bab60e11b815260040160405180910390fd5b6001600160a01b03821661060d5760405163755a183760e01b815260040160405180910390fd5b801561066057600580546001600160a01b0319166001600160a01b03841690811790915560405133907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c590600090a35050565b600680546001600160a01b0319166001600160a01b03841690811790915560405133907f87f5c8846f4c51400fa448cfb84edcec5cc0f333b6d20a5b903e050823dcb66790600090a35050565b6001600160a01b038216600090815260036020526040812080548392906106d59084906108f9565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610962833981519152906020015b60405180910390a35050565b806002600082825461072991906108e1565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610962833981519152910161070b565b80356001600160a01b038116811461078057600080fd5b919050565b600060208284031215610796578081fd5b61079f82610769565b9392505050565b600080604083850312156107b8578081fd5b6107c183610769565b91506107cf60208401610769565b90509250929050565b6000806000606084860312156107ec578081fd5b6107f584610769565b925061080360208501610769565b9150604084013590509250925092565b60008060408385031215610825578182fd5b61082e83610769565b915060208301358015158114610842578182fd5b809150509250929050565b6000806040838503121561085f578182fd5b61086883610769565b946020939093013593505050565b600060208284031215610887578081fd5b5035919050565b6000602080835283518082850152825b818110156108ba5785810183015185820160400152820161089e565b818111156108cb5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108f4576108f461094b565b500190565b60008282101561090b5761090b61094b565b500390565b600181811c9082168061092457607f821691505b6020821081141561094557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f5e6a0cb1366268d8576f43f0729e1390e8322f64dea9fc7192b284a519e846f64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610202578063cf81afaa14610215578063dd62ed3e14610228578063e30c39781461025357600080fd5b806370a082311461019c5780638da5cb5b146101bc57806395d89b41146101e7578063a0712d68146101ef57600080fd5b806323b872dd116100d357806323b872dd14610152578063313ce567146101655780633bd1adec1461017f57806342966c681461018957600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610266565b60405161010f919061088e565b60405180910390f35b61012b61012636600461084d565b6102f4565b604051901515815260200161010f565b61014460025481565b60405190815260200161010f565b61012b6101603660046107d8565b610360565b61016d601281565b60405160ff909116815260200161010f565b610187610440565b005b610187610197366004610876565b6104c3565b6101446101aa366004610785565b60036020526000908152604090205481565b6005546101cf906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610102610507565b6101876101fd366004610876565b610514565b61012b61021036600461084d565b610555565b610187610223366004610813565b6105bb565b6101446102363660046107a6565b600460209081526000928352604080842090915290825290205481565b6006546101cf906001600160a01b031681565b6000805461027390610910565b80601f016020809104026020016040519081016040528092919081815260200182805461029f90610910565b80156102ec5780601f106102c1576101008083540402835291602001916102ec565b820191906000526020600020905b8154815290600101906020018083116102cf57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061034f9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103bc5761039783826108f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103e49084906108f9565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716906000805160206109628339815191529061042d9087815260200190565b60405180910390a3506001949350505050565b6006546001600160a01b0316331461046b57604051636d0c59cb60e01b815260040160405180910390fd5b60055460405133916001600160a01b0316907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c590600090a3600580546001600160a01b03199081163317909155600680549091169055565b6005546001600160a01b031633146104ee57604051637d369bab60e11b815260040160405180910390fd5b600554610504906001600160a01b0316826106ad565b50565b6001805461027390610910565b6005546001600160a01b0316331461053f57604051637d369bab60e11b815260040160405180910390fd5b600554610504906001600160a01b031682610717565b336000908152600360205260408120805483919083906105769084906108f9565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133906000805160206109628339815191529061034f9086815260200190565b6005546001600160a01b031633146105e657604051637d369bab60e11b815260040160405180910390fd5b6001600160a01b03821661060d5760405163755a183760e01b815260040160405180910390fd5b801561066057600580546001600160a01b0319166001600160a01b03841690811790915560405133907f5bb496b3f951b55d3a1d8e479725a4d25bdc7644fc355f0b71c540354820a1c590600090a35050565b600680546001600160a01b0319166001600160a01b03841690811790915560405133907f87f5c8846f4c51400fa448cfb84edcec5cc0f333b6d20a5b903e050823dcb66790600090a35050565b6001600160a01b038216600090815260036020526040812080548392906106d59084906108f9565b90915550506002805482900390556040518181526000906001600160a01b03841690600080516020610962833981519152906020015b60405180910390a35050565b806002600082825461072991906108e1565b90915550506001600160a01b038216600081815260036020908152604080832080548601905551848152600080516020610962833981519152910161070b565b80356001600160a01b038116811461078057600080fd5b919050565b600060208284031215610796578081fd5b61079f82610769565b9392505050565b600080604083850312156107b8578081fd5b6107c183610769565b91506107cf60208401610769565b90509250929050565b6000806000606084860312156107ec578081fd5b6107f584610769565b925061080360208501610769565b9150604084013590509250925092565b60008060408385031215610825578182fd5b61082e83610769565b915060208301358015158114610842578182fd5b809150509250929050565b6000806040838503121561085f578182fd5b61086883610769565b946020939093013593505050565b600060208284031215610887578081fd5b5035919050565b6000602080835283518082850152825b818110156108ba5785810183015185820160400152820161089e565b818111156108cb5783604083870101525b50601f01601f1916929092016040019392505050565b600082198211156108f4576108f461094b565b500190565b60008282101561090b5761090b61094b565b500390565b600181811c9082168061092457607f821691505b6020821081141561094557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220f5e6a0cb1366268d8576f43f0729e1390e8322f64dea9fc7192b284a519e846f64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "transferOwner(address,bool)": {
        "params": {
          "direct": "If 'true', ownership is directly transferred.",
          "recipient": "Account granted `owner` access control."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "IncreOwnable_NotOwner()": [
        {
          "notice": "Emitted when the sender is not the owner"
        }
      ],
      "IncreOwnable_NotPendingOwner()": [
        {
          "notice": "Emitted when the sender is not the pending owner"
        }
      ],
      "IncreOwnable_TransferZeroAddress()": [
        {
          "notice": "Emitted when the proposed owner is equal to the zero address"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "claimOwner()": {
        "notice": "`pendingOwner` can claim `owner` account."
      },
      "transferOwner(address,bool)": {
        "notice": "Transfer `owner` account."
      }
    },
    "notice": "ERC20 token traded on the CryptoSwap pool",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11834,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 11837,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 11844,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 11849,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "balanceOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 11856,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "allowance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 12395,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 12397,
        "contract": "contracts/tokens/VQuote.sol:VQuote",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}